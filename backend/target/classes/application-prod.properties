# Production Environment Configuration
# IMPORTANT: Change all sensitive values before deploying to production!

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration (Production)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:sistem_manajemen_sekolah}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection Pool Configuration (Production optimized)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# Flyway Migration Configuration (Production - Disable clean)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.baseline-version=0
spring.flyway.baseline-description=Initial baseline

# JWT Configuration (Production - Use environment variables!)
jwt.secret=${JWT_SECRET:your_very_long_secret_key_here_make_it_at_least_256_bits_long_for_security}
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# Logging Configuration (Production - Less verbose)
logging.level.com.sekolah=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.flywaydb=INFO
logging.level.root=WARN

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Email Configuration (Production)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# CORS Configuration (Production - Restrict origins)
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com,https://www.yourdomain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# OpenAPI Configuration (Production - Disable in production)
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Application Configuration
app.name=Sistem Manajemen Sekolah
app.version=1.0.0
app.timezone=Asia/Jakarta

# GPS Configuration (for attendance validation)
app.gps.allowed-radius=100
app.gps.default-latitude=-6.2088
app.gps.default-longitude=106.8456

# File Storage Configuration (Production - Use cloud storage)
app.file.upload-dir=${FILE_UPLOAD_DIR:/var/uploads}
app.file.allowed-extensions=jpg,jpeg,png,pdf,doc,docx

# Pagination Configuration
app.pagination.default-size=10
app.pagination.max-size=100

# Rate Limiting Configuration (Production - Lower limits)
app.rate-limit.requests-per-minute=100
app.rate-limit.admin-requests-per-minute=1000

# Security Configuration (Production)
spring.security.require-ssl=true
server.ssl.enabled=true
server.ssl.key-store=${SSL_KEY_STORE:/path/to/keystore.p12}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:password}
server.ssl.key-store-type=PKCS12

# Performance Configuration
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Cache Configuration (Production)
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# Monitoring Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Production specific settings
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never 